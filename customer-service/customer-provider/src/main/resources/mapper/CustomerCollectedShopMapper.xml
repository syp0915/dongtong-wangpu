<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dongtong.customer.dao.CustomerCollectedShopMapper">
  <resultMap id="BaseResultMap" type="com.dongtong.customer.domain.CustomerCollectedShop">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="customer_id" jdbcType="BIGINT" property="customerId" />
    <result column="shop_id" jdbcType="BIGINT" property="shopId" />
    <result column="creater" jdbcType="BIGINT" property="creater" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modifier" jdbcType="BIGINT" property="modifier" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="version" jdbcType="BIGINT" property="version" />
  </resultMap>
  <sql id="Base_Column_List">
    id, customer_id, shop_id, creater, create_time, modifier, modify_time, version
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer_collected_shop
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from customer_collected_shop
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.dongtong.customer.domain.CustomerCollectedShop" useGeneratedKeys="true">
    insert into customer_collected_shop (id, customer_id, shop_id, 
      creater, create_time, modifier, 
      modify_time, version)
    values (#{id,jdbcType=BIGINT}, #{customerId,jdbcType=BIGINT}, #{shopId,jdbcType=BIGINT}, 
      #{creater,jdbcType=BIGINT}, now(), #{modifier,jdbcType=BIGINT}, 
      #{modifyTime,jdbcType=TIMESTAMP}, 0)
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.dongtong.customer.domain.CustomerCollectedShop" useGeneratedKeys="true">
    insert into customer_collected_shop
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="creater != null">
        creater,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="creater != null">
        #{creater,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        now(),
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        0,
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dongtong.customer.domain.CustomerCollectedShop">
    update customer_collected_shop
    <set>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=BIGINT},
      </if>
      <if test="creater != null">
        creater = #{creater,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=BIGINT},
      </if>
      modify_time = now(),
      version = version+1
    </set>
    where id = #{id,jdbcType=BIGINT} and version = #{version,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dongtong.customer.domain.CustomerCollectedShop">
    update customer_collected_shop
    set customer_id = #{customerId,jdbcType=BIGINT},
      shop_id = #{shopId,jdbcType=BIGINT},
      creater = #{creater,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modifier = #{modifier,jdbcType=BIGINT},
      modify_time = now(),
      version = version+1
    where id = #{id,jdbcType=BIGINT} and version = #{version,jdbcType=BIGINT}
  </update>

  <select id="myCollectStatistic" resultType="com.dongtong.customer.dto.resp.CollectStatisticDTO">
     SELECT m1.customerId,m1.totalCollected,m2.totalCustomer ,(@rowNum:=@rowNum+1) as rowNo from (
     SELECT customer_id as customerId ,COUNT(customer_id) as totalCollected    from customer_collected_shop GROUP BY customer_id ORDER BY totalCollected DESC
    )m1,(
    SELECT COUNT(*) totalCustomer from customer) m2,
    (Select (@rowNum :=0) ) temp
  </select>
  <select id="queryShopCollectedInfo" resultType="java.lang.Long">
    SELECT
        id AS collectedId
    FROM
        customer_collected_shop
    WHERE
        shop_id = #{shopId} AND customer_id = #{customerId} limit 1
  </select>

  <delete id="deleteByShopId">
      DELETE from customer_collected_shop  where customer_id =#{customerId} and shop_id = #{shopId}
  </delete>
</mapper>