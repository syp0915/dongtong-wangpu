<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dongtong.basic.dao.BaseIndustryMapper">
  <resultMap id="BaseResultMap" type="com.dongtong.basic.domain.BaseIndustry">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="creater" jdbcType="BIGINT" property="creater" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modifier" jdbcType="BIGINT" property="modifier" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="version" jdbcType="BIGINT" property="version" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, parent_id, creater, create_time, modifier, modify_time, version
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from base_industry
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from base_industry
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.dongtong.basic.domain.BaseIndustry" useGeneratedKeys="true">
    insert into base_industry (id, name, parent_id, 
      creater, create_time, modifier, 
      modify_time, version)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, 
      #{creater,jdbcType=BIGINT}, now(), #{modifier,jdbcType=BIGINT}, 
      #{modifyTime,jdbcType=TIMESTAMP}, 0)
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.dongtong.basic.domain.BaseIndustry" useGeneratedKeys="true">
    insert into base_industry
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="creater != null">
        creater,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="creater != null">
        #{creater,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        now(),
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        0,
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dongtong.basic.domain.BaseIndustry">
    update base_industry
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="creater != null">
        creater = #{creater,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=BIGINT},
      </if>
      modify_time = now(),
      version = version+1
    </set>
    where id = #{id,jdbcType=BIGINT} and version = #{version,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dongtong.basic.domain.BaseIndustry">
    update base_industry
    set name = #{name,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      creater = #{creater,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modifier = #{modifier,jdbcType=BIGINT},
      modify_time = now(),
      version = version+1
    where id = #{id,jdbcType=BIGINT} and version = #{version,jdbcType=BIGINT}
  </update>
  <!--业态经营访问map-->
  <resultMap id="industryListInfo" type="com.dongtong.basic.dto.IndustryInfoDTO">
    <id column="industryId" property="industryId" jdbcType="BIGINT"/>
    <result column="industryName" property="industryName" jdbcType="VARCHAR"/>
    <result column="depict" property="depict" jdbcType="VARCHAR"/>
    <collection property="list" column="industryId" ofType="com.dongtong.basic.dto.BusinessInfoDTO" javaType="java.util.ArrayList"
    select="queryBusinessByIndustryId">
      <id column="businessId" property="businessId"/>
      <id column="businessName" property="businessName"/>
    </collection>
  </resultMap>
  
  <select id="queryIndustry" resultMap="industryListInfo">
    select a.id as industryId,a.name as industryName,CONCAT(a.name,'(',count(b.id),')') as depict
    FROM
    base_industry a
    LEFT JOIN
    base_industry b ON a.id = b.parent_id
    WHERE
    a.parent_id IS NULL
    group by a.id,a.name
  </select>

  <select id="queryBusinessByIndustryId" resultType="com.dongtong.basic.dto.BusinessInfoDTO" parameterType="java.lang.Long">
    SELECT
    id as businessId,name as businessName
    FROM
    base_industry
    WHERE
    parent_id =#{industryId}
  </select>



  <select id="industryList" resultType="com.dongtong.basic.dto.IndustryInfoDTO">
    select id as industryId,name as industryName
    FROM
    base_industry
    WHERE
    parent_id IS NULL
  </select>
</mapper>