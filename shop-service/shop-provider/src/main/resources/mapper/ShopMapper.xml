<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dongtong.shop.dao.ShopMapper">
    <resultMap id="BaseResultMap" type="com.dongtong.shop.domain.Shop">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="clerk_id" jdbcType="BIGINT" property="clerkId" />
        <result column="hint_id" jdbcType="BIGINT" property="hintId" />
        <result column="rent_type" jdbcType="TINYINT" property="rentType" />
        <result column="rent_status" jdbcType="TINYINT" property="rentStatus" />
        <result column="shelf_status" jdbcType="TINYINT" property="shelfStatus" />
        <result column="contacter" jdbcType="VARCHAR" property="contacter" />
        <result column="contact_tel" jdbcType="VARCHAR" property="contactTel" />
        <result column="is_show" jdbcType="TINYINT" property="isShow" />
        <result column="address" jdbcType="VARCHAR" property="address" />
        <result column="longitude" jdbcType="VARCHAR" property="longitude" />
        <result column="latitude" jdbcType="VARCHAR" property="latitude" />
        <result column="addr_is_show" jdbcType="TINYINT" property="addrIsShow" />
        <result column="district_id" jdbcType="BIGINT" property="districtId" />
        <result column="district_name" jdbcType="VARCHAR" property="districtName" />
        <result column="block_id" jdbcType="BIGINT" property="blockId" />
        <result column="block_name" jdbcType="VARCHAR" property="blockName" />
        <result column="floor" jdbcType="VARCHAR" property="floor" />
        <result column="total_floor" jdbcType="VARCHAR" property="totalFloor" />
        <result column="area" jdbcType="REAL" property="area" />
        <result column="width" jdbcType="REAL" property="width" />
        <result column="depth" jdbcType="REAL" property="depth" />
        <result column="height" jdbcType="REAL" property="height" />
        <result column="is_poster" jdbcType="TINYINT" property="isPoster" />
        <result column="shop_code" jdbcType="VARCHAR" property="shopCode" />
        <result column="operate_status" jdbcType="TINYINT" property="operateStatus" />
        <result column="shop_name" jdbcType="VARCHAR" property="shopName" />
        <result column="industry_id" jdbcType="BIGINT" property="industryId" />
        <result column="rent_way" jdbcType="TINYINT" property="rentWay" />
        <result column="rent" jdbcType="DECIMAL" property="rent" />
        <result column="transfer_fee" jdbcType="DECIMAL" property="transferFee" />
        <result column="is_face" jdbcType="TINYINT" property="isFace" />
        <result column="compact_residue" jdbcType="TINYINT" property="compactResidue" />
        <result column="deposit" jdbcType="DECIMAL" property="deposit" />
        <result column="water_rate" jdbcType="REAL" property="waterRate" />
        <result column="electric_rate" jdbcType="REAL" property="electricRate" />
        <result column="gas_rate" jdbcType="REAL" property="gasRate" />
        <result column="property_rate" jdbcType="REAL" property="propertyRate" />
        <result column="undo_type" jdbcType="TINYINT" property="undoType" />
        <result column="undo_id" jdbcType="BIGINT" property="undoId" />
        <result column="undo_tag_id" jdbcType="BIGINT" property="undoTagId" />
        <result column="undo_content" jdbcType="VARCHAR" property="undoContent" />
        <result column="undo_time" jdbcType="TIMESTAMP" property="undoTime" />
        <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
        <result column="auditor" jdbcType="BIGINT" property="auditor" />
        <result column="audit_status" jdbcType="TINYINT" property="auditStatus" />
        <result column="audit_content" jdbcType="VARCHAR" property="auditContent" />
        <result column="weight_value" jdbcType="REAL" property="weightValue" />
        <result column="creater" jdbcType="BIGINT" property="creater" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="modifier" jdbcType="BIGINT" property="modifier" />
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
        <result column="version" jdbcType="BIGINT" property="version" />
    </resultMap>
    <sql id="Base_Column_List">
        id, clerk_id, hint_id, rent_type, rent_status,shelf_status, contacter, contact_tel, is_show, address,
        longitude, latitude,addr_is_show, district_id, district_name, block_id, block_name, floor, total_floor,
        area, width, depth, height,is_poster, shop_code, operate_status, shop_name, industry_id, rent_way,
        rent, transfer_fee, is_face, compact_residue, deposit, water_rate, electric_rate,
        gas_rate, property_rate, undo_type, undo_id, undo_tag_id, undo_content, undo_time,
        is_delete, auditor, audit_status, audit_content,weight_value, creater, create_time,
        modifier, modify_time, version
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from shop
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from shop
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyProperty="id" parameterType="com.dongtong.shop.domain.Shop" useGeneratedKeys="true">
        insert into shop (id, clerk_id, hint_id,
        rent_type, rent_status,shelf_status, contacter,
        contact_tel, is_show, address,
        longitude, latitude,addr_is_show, district_id,
        district_name, block_id, block_name,
        floor, total_floor, area,
        width, depth, height,is_poster, shop_code,
        operate_status, shop_name, industry_id,
        rent_way, rent, transfer_fee,
        is_face, compact_residue, deposit,
        water_rate, electric_rate, gas_rate,
        property_rate, undo_type, undo_id,
        undo_tag_id, undo_content, undo_time,
        is_delete, auditor,
        audit_status, audit_content,weight_value, creater,
        create_time, modifier, modify_time,
        version)
        values (#{id,jdbcType=BIGINT}, #{clerkId,jdbcType=BIGINT}, #{hintId,jdbcType=BIGINT},
        #{rentType,jdbcType=TINYINT}, #{rentStatus,jdbcType=TINYINT}, #{shelfStatus,jdbcType=TINYINT},#{contacter,jdbcType=VARCHAR},
        #{contactTel,jdbcType=VARCHAR}, #{isShow,jdbcType=TINYINT}, #{address,jdbcType=VARCHAR},
        #{longitude,jdbcType=VARCHAR}, #{latitude,jdbcType=VARCHAR},#{addrIsShow,jdbcType=TINYINT}, #{districtId,jdbcType=BIGINT},
        #{districtName,jdbcType=VARCHAR}, #{blockId,jdbcType=BIGINT}, #{blockName,jdbcType=VARCHAR},
        #{floor,jdbcType=VARCHAR}, #{totalFloor,jdbcType=VARCHAR}, #{area,jdbcType=REAL},
        #{width,jdbcType=REAL}, #{depth,jdbcType=REAL}, #{height,jdbcType=REAL},#{isPoster,jdbcType=TINYINT}, #{shopCode,jdbcType=VARCHAR},
        #{operateStatus,jdbcType=TINYINT}, #{shopName,jdbcType=VARCHAR}, #{industryId,jdbcType=BIGINT},
        #{rentWay,jdbcType=TINYINT}, #{rent,jdbcType=DECIMAL}, #{transferFee,jdbcType=DECIMAL},
        #{isFace,jdbcType=TINYINT}, #{compactResidue,jdbcType=TINYINT}, #{deposit,jdbcType=DECIMAL},
        #{waterRate,jdbcType=REAL}, #{electricRate,jdbcType=REAL}, #{gasRate,jdbcType=REAL},
        #{propertyRate,jdbcType=REAL}, #{undoType,jdbcType=TINYINT}, #{undoId,jdbcType=BIGINT},
        #{undoTagId,jdbcType=BIGINT}, #{undoContent,jdbcType=VARCHAR}, #{undoTime,jdbcType=TIMESTAMP},
        0, #{auditor,jdbcType=BIGINT},
        #{auditStatus,jdbcType=TINYINT}, #{auditContent,jdbcType=VARCHAR},#{weightValue,jdbcType=REAL}, #{creater,jdbcType=BIGINT},
        now(), #{modifier,jdbcType=BIGINT}, now(),
        0)
    </insert>
    <insert id="insertSelective" keyProperty="id" parameterType="com.dongtong.shop.domain.Shop" useGeneratedKeys="true">
        insert into shop
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="clerkId != null">
                clerk_id,
            </if>
            <if test="hintId != null">
                hint_id,
            </if>
            <if test="rentType != null">
                rent_type,
            </if>
            <if test="rentStatus != null">
                rent_status,
            </if>
            <if test="shelfStatus != null">
                shelf_status,
            </if>
            <if test="contacter != null">
                contacter,
            </if>
            <if test="contactTel != null">
                contact_tel,
            </if>
            <if test="isShow != null">
                is_show,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="longitude != null">
                longitude,
            </if>
            <if test="latitude != null">
                latitude,
            </if>
            <if test="addrIsShow != null">
                addr_is_show,
            </if>
            <if test="districtId != null">
                district_id,
            </if>
            <if test="districtName != null">
                district_name,
            </if>
            <if test="blockId != null">
                block_id,
            </if>
            <if test="blockName != null">
                block_name,
            </if>
            <if test="floor != null">
                floor,
            </if>
            <if test="totalFloor != null">
                total_floor,
            </if>
            <if test="area != null">
                area,
            </if>
            <if test="width != null">
                width,
            </if>
            <if test="depth != null">
                depth,
            </if>
            <if test="height != null">
                height,
            </if>
            <if test="isPoster != null">
                is_poster,
            </if>
            <if test="shopCode != null">
                shop_code,
            </if>
            <if test="operateStatus != null">
                operate_status,
            </if>
            <if test="shopName != null">
                shop_name,
            </if>
            <if test="industryId != null">
                industry_id,
            </if>
            <if test="rentWay != null">
                rent_way,
            </if>
            <if test="rent != null">
                rent,
            </if>
            <if test="transferFee != null">
                transfer_fee,
            </if>
            <if test="isFace != null">
                is_face,
            </if>
            <if test="compactResidue != null">
                compact_residue,
            </if>
            <if test="deposit != null">
                deposit,
            </if>
            <if test="waterRate != null">
                water_rate,
            </if>
            <if test="electricRate != null">
                electric_rate,
            </if>
            <if test="gasRate != null">
                gas_rate,
            </if>
            <if test="propertyRate != null">
                property_rate,
            </if>
            <if test="undoType != null">
                undo_type,
            </if>
            <if test="undoId != null">
                undo_id,
            </if>
            <if test="undoTagId != null">
                undo_tag_id,
            </if>
            <if test="undoContent != null">
                undo_content,
            </if>
            <if test="undoTime != null">
                undo_time,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="auditor != null">
                auditor,
            </if>
            <if test="auditStatus != null">
                audit_status,
            </if>
            <if test="auditContent != null">
                audit_content,
            </if>
            <if test="weightValue != null">
                weight_value,
            </if>
            <if test="creater != null">
                creater,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="modifier != null">
                modifier,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
            <if test="version != null">
                version,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="clerkId != null">
                #{clerkId,jdbcType=BIGINT},
            </if>
            <if test="hintId != null">
                #{hintId,jdbcType=BIGINT},
            </if>
            <if test="rentType != null">
                #{rentType,jdbcType=TINYINT},
            </if>
            <if test="rentStatus != null">
                #{rentStatus,jdbcType=TINYINT},
            </if>
            <if test="shelfStatus != null">
                #{shelfStatus,jdbcType=TINYINT},
            </if>
            <if test="contacter != null">
                #{contacter,jdbcType=VARCHAR},
            </if>
            <if test="contactTel != null">
                #{contactTel,jdbcType=VARCHAR},
            </if>
            <if test="isShow != null">
                #{isShow,jdbcType=TINYINT},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="longitude != null">
                #{longitude,jdbcType=VARCHAR},
            </if>
            <if test="latitude != null">
                #{latitude,jdbcType=VARCHAR},
            </if>
            <if test="addrIsShow != null">
                #{addrIsShow,jdbcType=TINYINT},
            </if>
            <if test="districtId != null">
                #{districtId,jdbcType=BIGINT},
            </if>
            <if test="districtName != null">
                #{districtName,jdbcType=VARCHAR},
            </if>
            <if test="blockId != null">
                #{blockId,jdbcType=BIGINT},
            </if>
            <if test="blockName != null">
                #{blockName,jdbcType=VARCHAR},
            </if>
            <if test="floor != null">
                #{floor,jdbcType=VARCHAR},
            </if>
            <if test="totalFloor != null">
                #{totalFloor,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                #{area,jdbcType=REAL},
            </if>
            <if test="width != null">
                #{width,jdbcType=REAL},
            </if>
            <if test="depth != null">
                #{depth,jdbcType=REAL},
            </if>
            <if test="height != null">
                #{height,jdbcType=REAL},
            </if>
            <if test="isPoster != null">
                #{isPoster,jdbcType=TINYINT},
            </if>
            <if test="shopCode != null">
                #{shopCode,jdbcType=VARCHAR},
            </if>
            <if test="operateStatus != null">
                #{operateStatus,jdbcType=TINYINT},
            </if>
            <if test="shopName != null">
                #{shopName,jdbcType=VARCHAR},
            </if>
            <if test="industryId != null">
                #{industryId,jdbcType=BIGINT},
            </if>
            <if test="rentWay != null">
                #{rentWay,jdbcType=TINYINT},
            </if>
            <if test="rent != null">
                #{rent,jdbcType=DECIMAL},
            </if>
            <if test="transferFee != null">
                #{transferFee,jdbcType=DECIMAL},
            </if>
            <if test="isFace != null">
                #{isFace,jdbcType=TINYINT},
            </if>
            <if test="compactResidue != null">
                #{compactResidue,jdbcType=TINYINT},
            </if>
            <if test="deposit != null">
                #{deposit,jdbcType=DECIMAL},
            </if>
            <if test="waterRate != null">
                #{waterRate,jdbcType=REAL},
            </if>
            <if test="electricRate != null">
                #{electricRate,jdbcType=REAL},
            </if>
            <if test="gasRate != null">
                #{gasRate,jdbcType=REAL},
            </if>
            <if test="propertyRate != null">
                #{propertyRate,jdbcType=REAL},
            </if>
            <if test="undoType != null">
                #{undoType,jdbcType=TINYINT},
            </if>
            <if test="undoId != null">
                #{undoId,jdbcType=BIGINT},
            </if>
            <if test="undoTagId != null">
                #{undoTagId,jdbcType=BIGINT},
            </if>
            <if test="undoContent != null">
                #{undoContent,jdbcType=VARCHAR},
            </if>
            <if test="undoTime != null">
                #{undoTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDelete != null">
                0,
            </if>
            <if test="auditor != null">
                #{auditor,jdbcType=BIGINT},
            </if>
            <if test="auditStatus != null">
                #{auditStatus,jdbcType=TINYINT},
            </if>
            <if test="auditContent != null">
                #{auditContent,jdbcType=VARCHAR},
            </if>
            <if test="weightValue != null">
                #{weightValue,jdbcType=REAL},
            </if>
            <if test="creater != null">
                #{creater,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                now(),
            </if>
            <if test="modifier != null">
                #{modifier,jdbcType=BIGINT},
            </if>
            <if test="modifyTime != null">
                now(),
            </if>
            <if test="version != null">
                0,
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.dongtong.shop.domain.Shop">
        update shop
        <set>
            <if test="clerkId != null">
                clerk_id = #{clerkId,jdbcType=BIGINT},
            </if>
            <if test="hintId != null">
                hint_id = #{hintId,jdbcType=BIGINT},
            </if>
            <if test="rentType != null">
                rent_type = #{rentType,jdbcType=TINYINT},
            </if>
            <if test="rentStatus != null">
                rent_status = #{rentStatus,jdbcType=TINYINT},
            </if>
            <if test="shelfStatus != null">
                shelf_status = #{shelfStatus,jdbcType=TINYINT},
            </if>
            <if test="contacter != null">
                contacter = #{contacter,jdbcType=VARCHAR},
            </if>
            <if test="contactTel != null">
                contact_tel = #{contactTel,jdbcType=VARCHAR},
            </if>
            <if test="isShow != null">
                is_show = #{isShow,jdbcType=TINYINT},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="longitude != null">
                longitude = #{longitude,jdbcType=VARCHAR},
            </if>
            <if test="latitude != null">
                latitude = #{latitude,jdbcType=VARCHAR},
            </if>
            <if test="addrIsShow != null">
                addr_is_show = #{addrIsShow,jdbcType=TINYINT},
            </if>
            <if test="districtId != null">
                district_id = #{districtId,jdbcType=BIGINT},
            </if>
            <if test="districtName != null">
                district_name = #{districtName,jdbcType=VARCHAR},
            </if>
            <if test="blockId != null">
                block_id = #{blockId,jdbcType=BIGINT},
            </if>
            <if test="blockName != null">
                block_name = #{blockName,jdbcType=VARCHAR},
            </if>
            <if test="floor != null">
                floor = #{floor,jdbcType=VARCHAR},
            </if>
            <if test="totalFloor != null">
                total_floor = #{totalFloor,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                area = #{area,jdbcType=REAL},
            </if>
            <if test="width != null">
                width = #{width,jdbcType=REAL},
            </if>
            <if test="depth != null">
                depth = #{depth,jdbcType=REAL},
            </if>
            <if test="height != null">
                height = #{height,jdbcType=REAL},
            </if>
            <if test="isPoster != null">
                is_poster = #{isPoster,jdbcType=TINYINT},
            </if>
            <if test="shopCode != null">
                shop_code = #{shopCode,jdbcType=VARCHAR},
            </if>
            <if test="operateStatus != null">
                operate_status = #{operateStatus,jdbcType=TINYINT},
            </if>
            <if test="shopName != null">
                shop_name = #{shopName,jdbcType=VARCHAR},
            </if>
            <if test="industryId != null">
                industry_id = #{industryId,jdbcType=BIGINT},
            </if>
            <if test="rentWay != null">
                rent_way = #{rentWay,jdbcType=TINYINT},
            </if>
            <if test="rent != null">
                rent = #{rent,jdbcType=DECIMAL},
            </if>
            <if test="transferFee != null">
                transfer_fee = #{transferFee,jdbcType=DECIMAL},
            </if>
            <if test="isFace != null">
                is_face = #{isFace,jdbcType=TINYINT},
            </if>
            <if test="compactResidue != null">
                compact_residue = #{compactResidue,jdbcType=TINYINT},
            </if>
            <if test="deposit != null">
                deposit = #{deposit,jdbcType=DECIMAL},
            </if>
            <if test="waterRate != null">
                water_rate = #{waterRate,jdbcType=REAL},
            </if>
            <if test="electricRate != null">
                electric_rate = #{electricRate,jdbcType=REAL},
            </if>
            <if test="gasRate != null">
                gas_rate = #{gasRate,jdbcType=REAL},
            </if>
            <if test="propertyRate != null">
                property_rate = #{propertyRate,jdbcType=REAL},
            </if>
            <if test="undoType != null">
                undo_type = #{undoType,jdbcType=TINYINT},
            </if>
            <if test="undoId != null">
                undo_id = #{undoId,jdbcType=BIGINT},
            </if>
            <if test="undoTagId != null">
                undo_tag_id = #{undoTagId,jdbcType=BIGINT},
            </if>
            <if test="undoContent != null">
                undo_content = #{undoContent,jdbcType=VARCHAR},
            </if>
            <if test="undoTime != null">
                undo_time = #{undoTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=TINYINT},
            </if>
            <if test="auditor != null">
                auditor = #{auditor,jdbcType=BIGINT},
            </if>
            <if test="auditStatus != null">
                audit_status = #{auditStatus,jdbcType=TINYINT},
            </if>
            <if test="auditContent != null">
                audit_content = #{auditContent,jdbcType=VARCHAR},
            </if>
            <if test="weightValue != null">
                weight_value = #{weightValue,jdbcType=REAL},
            </if>
            <if test="creater != null">
                creater = #{creater,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifier != null">
                modifier = #{modifier,jdbcType=BIGINT},
            </if>
            modify_time = now(),
            version = version+1
        </set>
        where id = #{id,jdbcType=BIGINT} and version = #{version,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.dongtong.shop.domain.Shop">
        update shop
        set clerk_id = #{clerkId,jdbcType=BIGINT},
        hint_id = #{hintId,jdbcType=BIGINT},
        rent_type = #{rentType,jdbcType=TINYINT},
        rent_status = #{rentStatus,jdbcType=TINYINT},
        shelf_status = #{shelfStatus,jdbcType=TINYINT},
        contacter = #{contacter,jdbcType=VARCHAR},
        contact_tel = #{contactTel,jdbcType=VARCHAR},
        is_show = #{isShow,jdbcType=TINYINT},
        address = #{address,jdbcType=VARCHAR},
        longitude = #{longitude,jdbcType=VARCHAR},
        latitude = #{latitude,jdbcType=VARCHAR},
        addr_is_show = #{addrIsShow,jdbcType=TINYINT},
        district_id = #{districtId,jdbcType=BIGINT},
        district_name = #{districtName,jdbcType=VARCHAR},
        block_id = #{blockId,jdbcType=BIGINT},
        block_name = #{blockName,jdbcType=VARCHAR},
        floor = #{floor,jdbcType=VARCHAR},
        total_floor = #{totalFloor,jdbcType=VARCHAR},
        area = #{area,jdbcType=REAL},
        width = #{width,jdbcType=REAL},
        depth = #{depth,jdbcType=REAL},
        height = #{height,jdbcType=REAL},
        is_poster = #{isPoster,jdbcType=TINYINT},
        shop_code = #{shopCode,jdbcType=VARCHAR},
        operate_status = #{operateStatus,jdbcType=TINYINT},
        shop_name = #{shopName,jdbcType=VARCHAR},
        industry_id = #{industryId,jdbcType=BIGINT},
        rent_way = #{rentWay,jdbcType=TINYINT},
        rent = #{rent,jdbcType=DECIMAL},
        transfer_fee = #{transferFee,jdbcType=DECIMAL},
        is_face = #{isFace,jdbcType=TINYINT},
        compact_residue = #{compactResidue,jdbcType=TINYINT},
        deposit = #{deposit,jdbcType=DECIMAL},
        water_rate = #{waterRate,jdbcType=REAL},
        electric_rate = #{electricRate,jdbcType=REAL},
        gas_rate = #{gasRate,jdbcType=REAL},
        property_rate = #{propertyRate,jdbcType=REAL},
        undo_type = #{undoType,jdbcType=TINYINT},
        undo_id = #{undoId,jdbcType=BIGINT},
        undo_tag_id = #{undoTagId,jdbcType=BIGINT},
        undo_content = #{undoContent,jdbcType=VARCHAR},
        undo_time = #{undoTime,jdbcType=TIMESTAMP},
        is_delete = #{isDelete,jdbcType=TINYINT},
        auditor = #{auditor,jdbcType=BIGINT},
        audit_status = #{auditStatus,jdbcType=TINYINT},
        audit_content = #{auditContent,jdbcType=VARCHAR},
        weight_value = #{weightValue,jdbcType=REAL},
        creater = #{creater,jdbcType=BIGINT},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        modifier = #{modifier,jdbcType=BIGINT},
        modify_time = now(),
        version = version+1
        where id = #{id,jdbcType=BIGINT} and version = #{version,jdbcType=BIGINT}
    </update>

    <resultMap id="Base_Shop_Query_Map" type="com.dongtong.shop.dto.BaseShopDTO">
        <result column="id" property="id" jdbcType="BIGINT"/>
        <result column="coverImg" property="coverImg" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="addrIsShow" property="addrIsShow" jdbcType="TINYINT"/>
        <result column="rentTypeName" property="rentTypeName" jdbcType="VARCHAR"/>
        <result column="area" property="area" jdbcType="REAL"/>
        <result column="districtId" property="districtId" jdbcType="BIGINT"/>
        <result column="districtName" property="districtName" jdbcType="VARCHAR"/>
        <result column="blockId" property="blockId" jdbcType="BIGINT"/>
        <result column="blockName" property="blockName" jdbcType="VARCHAR"/>
        <result column="rentWay" property="rentWay" jdbcType="TINYINT"/>
        <result column="rent" property="rent" jdbcType="DECIMAL"/>
        <result column="isFace" property="isFace" jdbcType="TINYINT"/>
        <result column="distance" property="distance" jdbcType="REAL"/>
        <result column="transferFee" property="transferFee" jdbcType="DECIMAL"/>
        <result column="updateTime" property="updateTime" jdbcType="VARCHAR"/>
        <result column="modifyTime" property="modifyTime" jdbcType="TIMESTAMP"/>
        <result column="industryName" property="industryName" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 客户商铺 -->
    <resultMap id="QueryCustomerShopMap" type="com.dongtong.shop.dto.ShopCustomerDTO" extends="Base_Shop_Query_Map">
        <result column="visitCount" property="visitCount" jdbcType="INTEGER"/>
        <result column="contactCount" property="contactCount" jdbcType="INTEGER"/>
        <collection property="featureList" column="id" ofType="com.dongtong.shop.dto.TagDTO" javaType="ArrayList"
                    select="selectShopFeatureTags">
            <id property="id" column="id"/>
            <id property="name" column="name"/>
            <id property="color" column="color"/>
        </collection>
    </resultMap>
    <!--客户约看商铺列表-->
    <resultMap id="Shop_Visited_Customer_Map" type="com.dongtong.shop.dto.ShopVisitCustomerDTO" extends="QueryCustomerShopMap">
        <result column="rentStatus" property="rentStatus" jdbcType="INTEGER"/>
        <result column="shelfStatus" property="shelfStatus" jdbcType="INTEGER"/>
        <result column="addrIsShow" property="addrIsShow" jdbcType="INTEGER"/>
        <result column="customerId" property="customerId" jdbcType="BIGINT"/>
        <association column="{id=id,customerId=customerId}" property="rowNo" jdbcType="INTEGER" select="selectRowNoByVisited"/>
    </resultMap>
    <!--客户收藏商铺列表-->
    <resultMap id="Shop_Collected_Customer_Map" type="com.dongtong.shop.dto.ShopCollectedCustomerDTO" extends="QueryCustomerShopMap">
        <result column="rentStatus" property="rentStatus" jdbcType="INTEGER"/>
        <result column="shelfStatus" property="shelfStatus" jdbcType="INTEGER"/>
    </resultMap>
    <!--客户浏览商铺列表-->
    <resultMap id="Shop_Browse_Customer_Map" type="com.dongtong.shop.dto.ShopBrowseCustomerDTO" extends="QueryCustomerShopMap">
        <result column="rentStatus" property="rentStatus" jdbcType="INTEGER"/>
        <result column="shelfStatus" property="shelfStatus" jdbcType="INTEGER"/>
    </resultMap>
    <!-- 业务端商铺 -->
    <resultMap id="Query_Clerk_ShopMap" type="com.dongtong.shop.dto.ShopClerkDTO" extends="Base_Shop_Query_Map">
        <result column="clerkId" property="clerkId" jdbcType="BIGINT"/>
        <result column="rentStatus" property="rentStatus" jdbcType="INTEGER"/>
        <result column="shelfStatus" property="shelfStatus" jdbcType="INTEGER"/>
        <result column="followInfo" property="followInfo" jdbcType="VARCHAR"/>
    </resultMap>


    <!--商铺详情-->
    <resultMap id="QueryShopDetailMap" type="com.dongtong.shop.dto.ShopDetailDTO" extends="Base_Shop_Query_Map">
        <result column="rentType" property="rentType" jdbcType="TINYINT"/>
        <result column="visitCount" property="visitCount" jdbcType="TINYINT"/>
        <result column="contactCount" property="contactCount" jdbcType="TINYINT"/>
        <result column="clerkId" property="clerkId" jdbcType="BIGINT"/>
        <result column="clerkName" property="clerkName" jdbcType="VARCHAR"/>
        <result column="issueShopTime" property="issueShopTime" jdbcType="VARCHAR"/>
        <result column="rentStatus" property="rentStatus" jdbcType="TINYINT"/>
        <result column="shelfStatus" property="shelfStatus" jdbcType="TINYINT"/>
        <result column="longitude" property="longitude" jdbcType="VARCHAR"/>
        <result column="latitude" property="latitude" jdbcType="VARCHAR"/>
        <result column="width" property="width" jdbcType="REAL"/>
        <result column="depth" property="depth" jdbcType="REAL"/>
        <result column="height" property="height" jdbcType="REAL"/>
        <result column="electricRate" property="electricRate" jdbcType="REAL"/>
        <result column="waterRate" property="waterRate" jdbcType="REAL"/>
        <result column="gasRate" property="gasRate" jdbcType="REAL"/>
        <result column="propertyRate" property="propertyRate" jdbcType="REAL"/>
        <result column="operateStatus" property="operateStatus" jdbcType="TINYINT"/>
        <result column="shopName" property="shopName" jdbcType="VARCHAR"/>
        <result column="isShow" property="isShow" jdbcType="TINYINT"/>
        <result column="contacter" property="contacter" jdbcType="VARCHAR"/>
        <result column="contactTel" property="contactTel" jdbcType="VARCHAR"/>
        <result column="floor" property="floor" jdbcType="VARCHAR"/>
        <result column="totalFloor" property="totalFloor" jdbcType="VARCHAR"/>
        <result column="deposit" property="deposit" jdbcType="DECIMAL"/>
        <result column="compactResidue" property="compactResidue" jdbcType="TINYINT"/>
        <result column="isPoster" property="isPoster" jdbcType="TINYINT"/>
        <result column="shopCode" property="shopCode" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="parentId" property="parentId" jdbcType="BIGINT"/>
        <result column="isDelete" property="isDelete" jdbcType="TINYINT"/>
        <result column="industryId" property="industryId" jdbcType="BIGINT"/>
        <result column="creater" property="creater" jdbcType="BIGINT"/>
        <result column="expandClerkId" property="expandClerkId" jdbcType="BIGINT"/>
        <result column="expandClerkName" property="expandClerkName" jdbcType="VARCHAR"/>
        <result column="expandClerkPhone" property="expandClerkPhone" jdbcType="VARCHAR"/>
        <result column="tradeClerkId" property="tradeClerkId" jdbcType="BIGINT"/>
        <result column="tradeClerkName" property="tradeClerkName" jdbcType="VARCHAR"/>
        <result column="tradeClerkPhone" property="tradeClerkPhone" jdbcType="VARCHAR"/>
        <collection property="imageList" column="id" ofType="com.dongtong.shop.dto.ShopImgDTO" javaType="ArrayList"
                    select="selectShopImgs">
            <id property="imgUrl" column="imgUrl"/>
            <id property="imgIndex" column="imgIndex"/>
            <id property="isCover" column="isCover"/>
        </collection>
        <collection property="featureList" column="id" ofType="com.dongtong.shop.dto.TagDTO" javaType="ArrayList"
                    select="selectShopFeatureTags">
            <id property="id" column="id"/>
            <id property="name" column="name"/>
            <id property="color" column="color"/>
        </collection>
        <collection property="nearInfoList" column="id" ofType="com.dongtong.shop.dto.ShopNearDetailDTO" javaType="ArrayList"
                    select="selectNearShop">
            <id property="nearId" column="nearId"/>
            <id property="name" column="name"/>
            <id property="industryId" column="industryId"/>
            <id property="nearSeat" column="nearSeat"/>
        </collection>
        <collection property="industryList" column="id" ofType="com.dongtong.shop.dto.IndustryDTO" javaType="ArrayList"
                    select="selectShopIndustry">
            <id property="industryId" column="industryId"/>
            <id property="name" column="name"/>
            <id property="parentId" column="parentId"/>
        </collection>
        <collection property="supportList" column="id" ofType="com.dongtong.shop.dto.TagDTO" javaType="ArrayList"
                    select="selectShopSupport">
            <id property="id" column="id"/>
            <id property="name" column="name"/>
            <id property="color" column="color"/>
        </collection>
    </resultMap>

    <!--铺位照片-->
    <select id="selectShopImgs" parameterType="java.lang.Long" resultType="com.dongtong.shop.dto.ShopImgDTO">
        SELECT
            img_url imgUrl, img_index imgIndex, is_cover isCover
        FROM
            shop_img
        WHERE
            shop_id = #{id}
        ORDER BY isCover desc, create_time asc
    </select>
    <!-- 邻铺集合 -->
    <select id="selectNearShop" parameterType="java.lang.Long" resultType="com.dongtong.shop.dto.ShopNearDetailDTO">
        SELECT
            sn.id AS nearId,
            sn.name AS name,
            sn.industry_id AS industryId,
            sn.near_seat AS nearSeat,
            bi.name AS industryName,
            bi.parent_id AS parentId
        FROM
            shop_near sn
                LEFT JOIN
            base_industry bi ON bi.id = sn.industry_id
        WHERE
            sn.shop_id = #{id}
        order by nearSeat
    </select>
    <!-- 可经营业态集合 -->
    <select id="selectShopIndustry" parameterType="java.lang.Long" resultType="com.dongtong.shop.dto.IndustryDTO">
        SELECT
            bi.id AS industryId,
            bi.NAME AS NAME,
            bi.parent_id AS parentid
        FROM
            shop_operate_rel sor
                LEFT JOIN
            base_industry bi ON sor.industry_id = bi.id
        WHERE
            sor.shop_id = #{id}
    </select>

    <select id="selectShopSupport" parameterType="java.lang.Long" resultType="com.dongtong.shop.dto.TagDTO">
        SELECT
            bt.id AS id, bt.tag_name AS name, bt.tag_color AS color
        FROM
            shop_support_tag_rel sstr
                LEFT JOIN
            base_tag bt ON sstr.tag_id = bt.id
        WHERE
            sstr.shop_id = #{id}
    </select>

    <!-- 特色标签集合 -->
    <select id="selectShopFeatureTags" parameterType="java.lang.Long" resultType="com.dongtong.shop.dto.TagDTO">
      select
        bt.id as id,
        bt.tag_name as name,
        bt.tag_color as color
      from
        shop_feature_tag_rel sftr left join base_tag bt on sftr.tag_id = bt.id
      where sftr.shop_id = #{id}
    </select>

    <sql id="Base_Query_Condition">
        <if test="query.rentList != null and query.rentList.size() > 0">
            and
            <foreach item="item" index="index" collection="query.rentList" separator="or" open="(" close=")">
                <if test="item == 1">
                    (s.rent &gt;= 0 and s.rent &lt; 5000)
                </if>
                <if test="item == 2">
                    (s.rent &gt;= 5000 and s.rent &lt; 10000)
                </if>
                <if test="item == 3">
                    (s.rent &gt;= 10000 and s.rent &lt; 20000)
                </if>
                <if test="item == 4">
                    (s.rent &gt;= 20000 and s.rent &lt; 50000)
                </if>
                <if test="item == 5">
                    (s.rent &gt;= 50000 and s.rent &lt; 100000)
                </if>
                <if test="item == 6">
                    (s.rent &gt;= 100000)
                </if>
            </foreach>
        </if>
        <if test="query.transferList != null and query.transferList.size() >0">
            and
            <foreach item="item" index="index" collection="query.transferList" separator="or" open="(" close=")">
                <if test="item == 1">
                    (s.transfer_fee = 0 and s.is_face = 0)
                </if>
                <if test="item == 2">
                    (s.transfer_fee &gt; 0 and s.transfer_fee &lt; 50000 and s.is_face = 0)
                </if>
                <if test="item == 3">
                    (s.transfer_fee &gt;= 50000 and s.transfer_fee &lt; 100000 and s.is_face = 0)
                </if>
                <if test="item == 4">
                    (s.transfer_fee &gt;= 100000 and s.transfer_fee &lt; 200000 and s.is_face = 0)
                </if>
                <if test="item == 5">
                    (s.transfer_fee &gt;= 200000 and s.is_face = 0)
                </if>
                <if test="item == 6">
                    (s.is_face = 1)
                </if>
            </foreach>
        </if>
        <if test="query.areaList != null and query.areaList.size() > 0">
            and
            <foreach item="item" index="index" collection="query.areaList" separator="or" open="(" close=")">
                <if test="item == 1">
                    (s.area &gt; 0 and s.area &lt; 20)
                </if>
                <if test="item == 2">
                    (s.area &gt;= 20 and s.area &lt; 50)
                </if>
                <if test="item == 3">
                    (s.area &gt;= 50 and s.area &lt; 100)
                </if>
                <if test="item == 4">
                    (s.area &gt;= 100 and s.area &lt; 200)
                </if>
                <if test="item == 5">
                    (s.area &gt;= 200 and s.area &lt; 500)
                </if>
                <if test="item == 6">
                    (s.area &gt;= 500 and s.area &lt; 1000)
                </if>
                <if test="item == 7">
                    (s.area &gt;= 1000 )
                </if>
            </foreach>
        </if>
        <if test="query.width != null">
            and s.width &gt;= #{query.width}
        </if>
        <if test="query.featureTagList != null and query.featureTagList.size()>0">
            and sftr.tag_id in
            <foreach item="item" index="index" collection="query.featureTagList"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="query.supportTagList != null and query.supportTagList.size()>0">
            and sstr.tag_id in
            <foreach item="item" index="index" collection="query.supportTagList"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </sql>
    
    <select id="queryShopByCustomer" resultMap="QueryCustomerShopMap">
        select
        t.*, IFNULL(t.weightValue, 0)+ IFNULL(t.weightValue1, 0) + IFNULL(t.weightValue2, 0) + IFNULL(t.weightValue3, 0) + IFNULL(t.weightValue4, 0)  as totalScore
        from (
            select
              s.id as id,
              img.img_url as coverImg,
              cb.visitCount as visitCount,
              (ifnull(cl.telCount,0) + ifnull(cv.vCount,0)) as contactCount,
              s.address as address,s.addr_is_show as addrIsShow,
              case when s.rent_type = 0 then '转租' ELSE '直租' END as rentTypeName,
              s.area as area,
              s.district_id as districtId,
              s.district_name as districtName,
              s.block_id as blockId,
              s.block_name as blockName,
              s.rent_way as rentWay,
              s.rent as rent,
              s.is_face as isFace,
              <if test="query != null and query.longitude != null and query.longitude != '' and query.latitude != null and query.latitude != ''">
                  fun_distance(s.latitude, s.longitude, #{query.latitude}, #{query.longitude}) as distance,
              </if>
              s.transfer_fee as transferFee,
              s.modify_time as modifyTime,
            s.weight_value AS weightValue,
              <if test="query.sortType == null">
                CASE WHEN TO_DAYS(NOW()) - TO_DAYS(s.modify_time) &lt;= 7 THEN   1
                WHEN TO_DAYS(NOW()) - TO_DAYS(s.modify_time) &lt;= 30 THEN   0.5  ELSE 0 END AS weightValue1,
                <if test="query.followAreaList != null and query.followAreaList.size() > 0">
                    CASE WHEN
                    <foreach item="item" index="index" collection="query.followAreaList" separator="or">
                        <if test="item == 1">
                            (s.area &gt; 0 and s.area &lt; 20)
                        </if>
                        <if test="item == 2">
                            (s.area &gt;= 20 and s.area &lt; 50)
                        </if>
                        <if test="item == 3">
                            (s.area &gt;= 50 and s.area &lt; 100)
                        </if>
                        <if test="item == 4">
                            (s.area &gt;= 100 and s.area &lt; 200)
                        </if>
                        <if test="item == 5">
                            (s.area &gt;= 200 and s.area &lt; 500)
                        </if>
                        <if test="item == 6">
                            (s.area &gt;= 500 and s.area &lt; 1000)
                        </if>
                        <if test="item == 7">
                            (s.area &gt;= 1000 )
                        </if>
                    </foreach>
                    THEN    0.35  else 0 end as weightValue2,
                </if>
            <if test="query.followAreaList == null">
                0 as  weightValue2,
            </if>
                <if test="query.followPlateList !=null and query.followPlateList.size()>0">
                    CASE WHEN
                    <foreach collection="query.followPlateList" item="item" index="index" separator="or">
                        (FIND_IN_SET(#{item},block_name))
                    </foreach>
                    THEN    0.45  else 0 end as weightValue3,
                </if>
            <if test="query.followPlateList == null">
                0 as  weightValue3,
            </if>
            <if test="query.followVocationList !=null and query.followVocationList.size()>0">
                CASE WHEN
                <foreach collection="query.followVocationList" item="item" index="index" separator="or">
                    (FIND_IN_SET(#{item}, parent_id))
                </foreach>
                THEN    0.2  else 0  end as weightValue4,
            </if>
            <if test="query.followVocationList == null">
                0 as  weightValue4,
            </if>
          </if>
        <if test="query.sortType != null">
            0 as  weightValue1,0 as  weightValue2,0 as  weightValue3,0 as  weightValue4,
        </if>
              bi.name AS industryName
            from shop s
            left join (select shop_id,  img_url from (select shop_id, img_url from shop_img
                    order by is_cover desc, img_index asc) t_si group by shop_id) img on s.id = img.shop_id
            left join (select shop_id, count(*) as visitCount from customer_browse_shop group by shop_id) cb on s.id = cb.shop_id
            left join (select shop_id, count(*) as telCount from customer_liaison group by shop_id) cl on s.id = cl.shop_id
            left join (select shop_id, count(*) as vCount from customer_visit_shop group by shop_id) cv on s.id = cv.shop_id
            left join shop_station_rel ssr on s.id = ssr.shop_id
            left join shop_feature_tag_rel sftr on s.id = sftr.shop_id
            left join shop_support_tag_rel sstr on s.id = sstr.shop_id
            left join base_industry bi ON s.industry_id = bi.id
            where s.is_delete = 0 and s.shelf_status = 0
            <if test="query != null">
                <if test="query.shopType != null and query.shopType == 0">
                    and s.modify_time &gt;= concat(DATE_SUB(curdate(),INTERVAL 7 DAY), ' 00:00:00') and s.modify_time &lt;= concat(curdate(), ' 23:59:59')
                </if>
                <if test="query.shopType != null and query.shopType == 1">
                    and s.transfer_fee = 0 and s.is_face = 0
                </if>
                <if test="query.shopType != null and query.shopType == 2">
                    and s.area &gt;= 80 and s.area &lt;= 120
                </if>
                <if test="query.shopType != null and query.shopType == 3">
                    and ssr.distance &lt;= 1 and ssr.distance &gt;= 0
                </if>
                <if test="query.districtId != null">
                    and s.district_id = #{query.districtId}
                </if>
                <if test="query.blockId != null">
                    and s.block_id = #{query.blockId}
                </if>
                <if test="query.metroId != null">
                    and ssr.metro_id = #{query.metroId}
                </if>
                <if test="query.stationId != null">
                    and ssr.station_id = #{query.stationId}
                    and ssr.distance &lt;= 1 and ssr.distance &gt;= 0
                </if>
                <include refid="Base_Query_Condition"/>
            </if>
            group by s.id
        ) t
        <if test="query.sortType == null">
            order by totalScore DESC ,id DESC
        </if>
        <if test="query.sortType == 1">
            order by t.modifyTime desc
        </if>
        <if test="query.sortType == 2">
            order by t.distance asc
        </if>
        <if test="query.sortType == 3">
            order by t.contactCount desc
        </if>
        <if test="query.sortType == 4">
            order by t.visitCount desc
        </if>
    </select>

    <select id="queryShopByClerk" resultMap="Query_Clerk_ShopMap">
        select
        *
        from (
            select
            s.id as id,
            s.clerk_id as clerkId,
            s.rent_status as rentStatus,
            s.shelf_status as shelfStatus,
            fol.content as followInfo,
            cb.visitCount as visitCount,
            img.img_url as coverImg,
            s.address as address,
            case when s.rent_type = 0 then '转租' ELSE '直租' END as rentTypeName,
            s.area as area,
            s.district_id as districtId,
            s.district_name as districtName,
            s.block_id as blockId,
            s.block_name as blockName,
            s.rent_way as rentWay,
            s.rent as rent,
            s.is_face as isFace,
            <if test="query != null and query.longitude != null and query.longitude != '' and query.latitude != null and query.latitude != ''">
                fun_distance(s.latitude, s.longitude, #{query.latitude}, #{query.longitude}) as distance,
            </if>
            s.transfer_fee as transferFee,
            s.modify_time as modifyTime,
            s.create_time as createTime
            from shop s
            left join (select shop_id,  img_url from (select shop_id, img_url from shop_img
            order by is_cover desc, img_index asc) t_si group by shop_id) img on s.id = img.shop_id
            left join (select shop_id, count(*) as visitCount from customer_browse_shop group by shop_id) cb on s.id = cb.shop_id
            left join (select shop_id, content from (select shop_id, content from shop_follow order by create_time desc)sf group by shop_id)fol on s.id = fol.shop_id
            left join shop_feature_tag_rel sftr on s.id = sftr.shop_id
            left join shop_support_tag_rel sstr on s.id = sstr.shop_id
            where s.is_delete = 0
            <if test="query != null">
                <if test="query.shopType != null and query.shopType == 0">
                    and (s.clerk_id = #{query.clerkId} or s.creater = #{query.clerkId})
                </if>
                <if test="query.districtId != null">
                    and s.district_id = #{query.districtId}
                </if>
                <if test="query.blockId != null">
                    and s.block_id = #{query.blockId}
                </if>
                <if test="query.rentStatus != null and query.rentStatus.size() >0">
                    and
                    <foreach item="item" index="index" collection="query.rentStatus" separator="or" open="(" close=")">
                        <if test="item == 1">
                            (s.rent_status = 1)
                        </if>
                        <if test="item == 2">
                            (s.rent_status = 2)
                        </if>
                        <if test="item == 3">
                            (s.rent_status = 3)
                        </if>
                    </foreach>
                </if>
                <if test="query.shelfStatus != null and query.shelfStatus.size() >0">
                    and
                    <foreach collection="query.shelfStatus" item="item" index="index" separator="or"  open="(" close=")">
                        <if test="item == 0">
                            (s.shelf_status = 0)
                        </if>
                        <if test="item == 1">
                            (s.shelf_status = 1)
                        </if>
                    </foreach>
                </if>
                <include refid="Base_Query_Condition"/>
            </if>
            group by s.id
        ) t
        <if test="query.sortType == null or query.sortType == 2">
            order by t.modifyTime desc
        </if>
        <if test="query.sortType == 1">
            order by t.createTime desc
        </if>

    </select>

    <select id="getLatestShop" resultType="com.dongtong.shop.dto.LatestShopDTO">
        select
          s.id as id,
          img.img_url as coverImg,
          cb.visitCount as visitCount,
          s.address as address
        from shop s
            left join (select shop_id,  img_url from (select shop_id, img_url from shop_img
                    order by is_cover desc, img_index asc) t_si group by shop_id) img on s.id = img.shop_id
            left join (select shop_id, count(*) as visitCount from customer_browse_shop
                  where create_time &gt;= date_sub(curdate(),interval 1 week)
                        and create_time &lt;= now()
                group by shop_id) cb on s.id = cb.shop_id
        where
            s.rent_status = 1 and s.is_delete = 0
        order by s.create_time  desc
        limit 1
    </select>

    <select id="getLatestShopByPhone" resultType="com.dongtong.shop.dto.LatestShopDTO">
        select
          s.id as id,
          img.img_url as coverImg,
          cb.visitCount as visitCount,
          s.address as address
        from shop s
            left join (select shop_id,  img_url from (select shop_id, img_url from shop_img
                    order by is_cover desc, img_index asc) t_si group by shop_id) img on s.id = img.shop_id
            left join (select shop_id, count(*) as visitCount from customer_browse_shop
                  where create_time &gt;= date_sub(curdate(),interval 1 week)
                        and create_time &lt;= now()
                group by shop_id) cb on s.id = cb.shop_id
        where
            s.rent_status = 1 and s.is_delete = 0 and s.contact_tel = #{phone}
        order by s.create_time  desc
        limit 1
    </select>

    <select id="queryThisWeekScanCount" resultType="int">
        select
        count(*) as scanCount
        from customer_browse_shop
        where create_time &gt;= date_sub(curdate(),interval 1 week)
              and create_time &lt;= now()
              and shop_id in (select id from shop where contact_tel = #{phone})
    </select>


    <select id="queryThisWeekScanRate" resultType="string">
        select
        r.phone as phone
        from(
            select
            sum(visitCount) as scanCount, s.contact_tel as phone
            from
                (select shop_id, count(*) as visitCount from customer_browse_shop
                where create_time &gt;= date_sub(curdate(),interval 1 week)
                and create_time &lt;= now()
                group by shop_id) t
            left join shop s on s.id = t.shop_id
            group by s.contact_tel)r
        order by r.scanCount desc
    </select>

    <select id="queryMyPublishShop" resultType="com.dongtong.shop.dto.ShopCustomerPublishDTO">
        select
          s.id as id,
          img.img_url as coverImg,
          s.address as address,
          s.area as area,
          cb.visitCount as scanCount,
          svs.visitCount as visitCount,
          DATE_FORMAT(s.create_time,'%Y.%m.%d') as publishTime,
          case when s.shelf_status = 1 then DATE_FORMAT(s.undo_time,'%Y.%m.%d') end as undoTime,
          s.rent_status as rentStatus,
          s.shelf_status as shelfStatus,
          cl.phone as clerkPhone,
          cl.head_portrait as headPortrait,
		  cl.real_name as clerkName
        from shop s
        left join (select shop_id,  img_url from (select shop_id, img_url from shop_img
                order by is_cover desc, img_index asc) t_si group by shop_id) img on s.id = img.shop_id
        left join (select shop_id, count(*) as visitCount from customer_browse_shop
              where create_time &gt;= date_sub(curdate(),interval 1 week)
                    and create_time &lt;= now()
            group by shop_id) cb on s.id = cb.shop_id
        left join (select shop_id, count(*) as visitCount from customer_visit_shop group by shop_id) svs on s.id = svs.shop_id
        left join clerk cl on s.clerk_id = cl.id
        where
        s.is_delete = 0  and s.contact_tel = #{query}
        order by s.modify_time desc
    </select>
    <select id="countShopFromClient" resultType="com.dongtong.shop.dto.ShopCountDTO">
        SELECT (
              SELECT COUNT(*)
            FROM shop
            WHERE modify_time &gt;= DATE_SUB(concat(curdate(), ' 00:00:00'), INTERVAL 7 DAY)  and modify_time &lt;= concat(curdate(), ' 23:59:59') AND is_delete = 0 AND shelf_status = 0) AS `countNewShop`, (
              SELECT COUNT(*)
            FROM shop
            WHERE transfer_fee = 0 AND is_face = 0 AND is_delete = 0 AND shelf_status = 0) AS `countNoTransferFee`, (
              SELECT COUNT(*)
            FROM shop
            WHERE area &gt;= 80 AND area &lt;= 120 AND is_delete = 0 AND shelf_status = 0) AS 'countHundredArea', (
              SELECT COUNT(id)
            FROM (
              SELECT *
            FROM (
              SELECT s.id, ssr.distance
            FROM shop_station_rel ssr
            LEFT JOIN shop s ON ssr.shop_id = s.id
            WHERE s.is_delete = 0 AND s.shelf_status = 0 ORDER BY distance) m1
            GROUP BY id) m2
            WHERE m2.distance &lt;= 1 AND m2.distance &gt;= 0) AS 'countNearStation'
    </select>
    <select id="countShopFromService" parameterType="java.lang.Long" resultType="com.dongtong.shop.dto.ShopCountDTO">
        SELECT
            (SELECT
                    COUNT(id)
                FROM
                    shop
                WHERE
                    is_delete = 0) AS 'allShopCount',
            (SELECT
                    COUNT(*)
                FROM
                    shop
                WHERE
                    is_delete = 0
                        AND clerk_id = #{clerkId,jdbcType=BIGINT} or creater = #{clerkId,jdbcType=BIGINT}) AS 'myShopCount'
    </select>

    <sql id="Base_Map_query">
        <if test="query.minLat != null">
            and CAST(s.latitude AS DECIMAL(15,6)) &gt;= CAST(#{query.minLat} AS DECIMAL(15,6))
        </if>
        <if test="query.maxLat != null">
            and CAST(s.latitude AS DECIMAL(15,6)) &lt;= CAST(#{query.maxLat} AS DECIMAL(15,6))
        </if>
        <if test="query.minLon != null">
            and CAST(s.longitude AS DECIMAL(15,6)) &gt;= CAST(#{query.minLon} AS DECIMAL(15,6))
        </if>
        <if test="query.maxLon != null">
            and CAST(s.longitude AS DECIMAL(15,6)) &lt;= CAST(#{query.maxLon} AS DECIMAL(15,6))
        </if>
    </sql>

    <sql id="DISTRICET_Map_query">
        <if test="query.minLat != null">
            and CAST(bl.baidu_lat AS DECIMAL(15,6)) &gt;= CAST(#{query.minLat} AS DECIMAL(15,6))
        </if>
        <if test="query.maxLat != null">
            and CAST(bl.baidu_lat AS DECIMAL(15,6)) &lt;= CAST(#{query.maxLat} AS DECIMAL(15,6))
        </if>
        <if test="query.minLon != null">
            and CAST(bl.baidu_lon AS DECIMAL(15,6)) &gt;= CAST(#{query.minLon} AS DECIMAL(15,6))
        </if>
        <if test="query.maxLon != null">
            and CAST(bl.baidu_lon AS DECIMAL(15,6)) &lt;= CAST(#{query.maxLon} AS DECIMAL(15,6))
        </if>
    </sql>

    <sql id="District_query">
          s.district_id AS bizId, COUNT(*) as shopCount
    </sql>
    <sql id="Block_query">
         s.block_id AS bizId, COUNT(*) as shopCount
    </sql>
    <!-- 业务端商铺地图-区域板块层级店铺数量 -->
    <select id="queryClerkRegionShopMap" resultType="com.dongtong.shop.dto.ShopMapDTO">
        <if test="query.type == 0">
            SELECT m1.*,m2.district_name AS name,m2.baidu_lat AS latitude, m2.baidu_lon AS longitude
            from (
            select
            <include refid="District_query"/>
            from shop s
            where  s.longitude is NOT NULL and s.latitude is not NULL and
            s.district_id in (
            SELECT id from base_district bl  where 1=1
            <include refid="DISTRICET_Map_query"/>
            )   group by s.district_id
            ) m1 LEFT JOIN base_district m2 on m1.bizId = m2.id
        </if>
        <if test="query.type == 1">
            SELECT m1.*,m2.block_name AS name,m2.baidu_lat AS latitude, m2.baidu_lon AS longitude
            from (
            select
            <include refid="Block_query"/>
            from shop s
            where
            s.block_id in (
            SELECT id from base_block bl where 1=1
            <include refid="DISTRICET_Map_query"/>
            )  group by s.block_id
            ) m1 LEFT JOIN base_block m2 on m1.bizId = m2.id
            <if test="query.districtId != null">
                where m2.district_id=#{query.districtId}
            </if>
        </if>
    </select>
    <!-- 业务端线索地图-区域板块层级线索数量 -->
    <select id="queryClerkRegionHintMap" resultType="com.dongtong.shop.dto.ShopMapDTO">
        <if test="query.type == 0">
            SELECT m1.*,m2.district_name AS name,m2.baidu_lat AS latitude, m2.baidu_lon AS longitude
            from (
            select
                <include refid="District_query"/>
            from clerk_hint s
            where s.longitude is NOT NULL and s.latitude is not NULL and
            s.district_id in (
            SELECT id from base_district bl  where 1=1
            <include refid="DISTRICET_Map_query"/>
            )   group by s.district_id
            ) m1 LEFT JOIN base_district m2 on m1.bizId = m2.id
       </if>
        <if test="query.type == 1">
            SELECT m1.*,m2.block_name AS name,m2.baidu_lat AS latitude, m2.baidu_lon AS longitude
            from (
            select
            <include refid="Block_query"/>
            from clerk_hint s
            where s.longitude is NOT NULL and s.latitude is not NULL and
            s.block_id in (
            SELECT id from base_block bl where 1=1
            <include refid="DISTRICET_Map_query"/>
            )  group by s.block_id
            ) m1 LEFT JOIN base_block m2 on m1.bizId = m2.id
            <if test="query.districtId != null">
                where m2.district_id=#{query.districtId}
            </if>
        </if>
    </select>

    <sql id="DISTINCT_District_query">
        DISTINCT s.id,
        bd.district_name as name,
        s.district_id as bizId,
        bd.baidu_lon as longitude,
        bd.baidu_lat as latitude
    </sql>
    <sql id="DISTINCT_Block_query">
        DISTINCT s.id,
        bb.block_name as name,
        s.block_id as bizId,
        bb.baidu_lon as longitude,
        bb.baidu_lat as latitude
    </sql>
    <!-- 客户端商铺地图-区域板块层级店铺数量 -->
    <select id="queryCustomerRegionShopMap" resultType="com.dongtong.shop.dto.ShopMapDTO">
        select
        *
        from (
        SELECT m1.name as name , m1.bizId as bizId ,m1.longitude,m1.latitude, COUNT(bizId) as shopCount FROM (
            select
            <if test="query.type == 0">
                <include refid="DISTINCT_District_query"/>
            </if>
            <if test="query.type == 1">
                <include refid="DISTINCT_Block_query"/>
            </if>
            from shop s
            left join base_block bb on bb.id = s.block_id
            left join base_district bd on bd.id = s.district_id
            left join shop_station_rel ssr on s.id = ssr.shop_id
            left join shop_feature_tag_rel sftr on s.id = sftr.shop_id
            left join shop_support_tag_rel sstr on s.id = sstr.shop_id
            where s.is_delete = 0 and s.shelf_status = 0
            <if test="query != null">
                <if test="query.districtId != null">
                    and s.district_id = #{query.districtId}
                </if>
                <include refid="Base_Map_query"/>
                <include refid="Base_Query_Condition"/>
            </if>
        )m1 group by bizId
        ) t  where t.shopCount > 0
    </select>


    <select id="queryClerkShopMap" resultType="com.dongtong.shop.dto.ShopMapDetailDTO">
        select
          s.shop_name as name,
          s.id as shopId,
          s.longitude as longitude,
          s.latitude as latitude,
          s.rent_status as shopStatus
        FROM shop s
        where s.is_delete = 0
        <if test="query.queryType != null and query.queryType == 0">
            and (s.clerk_id = #{query.clerkId} or s.creater = #{query.clerkId})
        </if>
        <if test="query.statusList != null and query.statusList.size()>0">
            and
            <foreach item="item" index="index" collection="query.statusList" separator="or" open="(" close=")">
                <if test="item == 1">
                    (s.rent_status = 1)
                </if>
                <if test="item == 2">
                    (s.rent_status = 2)
                </if>
                <if test="item == 3">
                    (s.rent_status = 3)
                </if>
            </foreach>
        </if>
        <if test="query.shelfList != null and query.shelfList.size() >0">
            and
            <foreach collection="query.shelfList" item="item" index="index" separator="or"  open="(" close=")">
                <if test="item == 0">
                    (s.shelf_status = 0)
                </if>
                <if test="item == 1">
                    (s.shelf_status = 1)
                </if>
            </foreach>
        </if>
        <if test="query.blockId != null">
            and s.block_id = #{query.blockId}
        </if>
        <include refid="Base_Map_query"/>
    </select>

    <select id="queryCustomerShopMap" resultType="com.dongtong.shop.dto.ShopMapCustomerDetailDTO">
        select s.area as area,s.rent as rent,
        s.shop_name as name,
        s.id as shopId,
        s.longitude as longitude,
        s.latitude as latitude,
        s.rent_status as shopStatus
        FROM shop s
        left join shop_feature_tag_rel sftr on s.id = sftr.shop_id
        left join shop_support_tag_rel sstr on s.id = sstr.shop_id
        where s.is_delete = 0 and s.shelf_status=0
        <if test="query != null">
            <if test="query.blockId != null">
                and s.block_id = #{query.blockId}
            </if>
            <include refid="Base_Map_query"/>
            <include refid="Base_Query_Condition"/>
        </if>
        GROUP BY s.id
    </select>

    <select id="findShopSummaryById" resultType="com.dongtong.shop.dto.ShopMapSummaryDTO">
        select
            s.id as id,
            s.clerk_id as clerkId,
            s.rent_status as rentStatus,
            s.shelf_status as shelfStatus,
            fol.content as followInfo,
            img.img_url as coverImg,
            s.address as address,
            case when s.rent_type = 0 then '转租' ELSE '直租' END as rentTypeName,
            s.area as area,
            s.district_id as districtId,
            s.district_name as districtName,
            s.block_id as blockId,
            s.block_name as blockName,
            s.rent_way as rentWay,
            s.rent as rent,
            s.is_face as isFace,
            <if test="query != null and query.longitude != null and query.latitude != null">
                fun_distance(s.latitude, s.longitude, #{query.latitude}, #{query.longitude}) as distance,
            </if>
            s.transfer_fee as transferFee,
            s.modify_time as modifyTime
        from shop s
        left join (select shop_id,  img_url from (select shop_id, img_url from shop_img
        order by is_cover desc, img_index asc) t_si group by shop_id) img on s.id = img.shop_id
        left join (select shop_id, content from (select shop_id, content from shop_follow order by create_time desc)sf group by shop_id)fol on s.id = fol.shop_id
        where s.is_delete = 0 and s.id= #{query.shopId}
    </select>

    <select id="viewShopSummaryById" resultMap="QueryCustomerShopMap">
        select
        s.id as id,
        img.img_url as coverImg,
        cb.visitCount as visitCount,
        (ifnull(cl.telCount,0) + ifnull(cv.vCount,0)) as contactCount,
        s.address as address,
        case when s.rent_type = 0 then '转租' ELSE '直租' END as rentTypeName,
        s.area as area,
        s.district_id as districtId,
        s.district_name as districtName,
        s.block_id as blockId,
        s.block_name as blockName,
        s.rent_way as rentWay,
        s.rent as rent,
        s.is_face as isFace,
        <if test="query != null and query.longitude != null and query.latitude != null">
            fun_distance(s.latitude, s.longitude, #{query.latitude}, #{query.longitude}) as distance,
        </if>
        s.transfer_fee as transferFee,
        s.modify_time as modifyTime,
        bi.name AS industryName
        from shop s
        left join (select shop_id,  img_url from (select shop_id, img_url from shop_img
        order by is_cover desc, img_index asc) t_si group by shop_id) img on s.id = img.shop_id
        left join (select shop_id, count(*) as visitCount from customer_browse_shop group by shop_id) cb on s.id = cb.shop_id
        left join (select shop_id, count(*) as telCount from customer_liaison group by shop_id) cl on s.id = cl.shop_id
        left join (select shop_id, count(*) as vCount from customer_visit_shop group by shop_id) cv on s.id = cv.shop_id
        left join base_industry bi ON s.industry_id = bi.id
        where  s.id= #{query.shopId} and s.is_delete = 0
    </select>

    <select id="queryShopDetail" resultMap="QueryShopDetailMap">
        SELECT
            s.id AS id,
            cb.visitCount AS visitCount,
            (ifnull(cl.telCount,0) + ifnull(cv.vCount,0)) AS contactCount,
            s.clerk_id AS tradeClerkId,
            s.rent_type As rentType,
            CASE
                WHEN s.rent_type = 0 THEN '转租'
                ELSE '直租'
            END AS rentTypeName,
            s.rent_status AS rentStatus,
            s.shelf_status As shelfStatus,
            s.contacter AS contacter,
            s.contact_tel AS contactTel,
            s.is_show AS isShow,
            s.addr_is_show As addrIsShow,
            s.address AS address,
            s.longitude AS longitude,
            s.latitude AS latitude,
            s.district_id AS districtId,
            s.district_name AS districtName,
            s.block_id AS blockId,
            s.block_name AS blockName,
            s.floor AS floor,
            s.total_floor AS totalFloor,
            s.area AS area,
            s.width AS width,
            s.depth AS depth,
            s.height AS height,
            s.is_poster As isPoster,
            s.shop_code AS shopCode,
            s.operate_status AS operateStatus,
            s.shop_name AS shopName,
            s.industry_id AS industryId,
            s.rent_way AS rentWay,
            s.rent AS rent,
            s.transfer_fee AS transferFee,
            s.is_face AS isFace,
            s.compact_residue AS compactResidue,
            s.deposit AS deposit,
            s.water_rate AS waterRate,
            s.electric_rate AS electricRate,
            s.gas_rate AS gasRate,
            s.property_rate AS propertyRate,
            s.is_delete AS isDelete,
            DATE_FORMAT(s.create_time, '%Y.%m.%d') AS issueShopTime,
            s.modify_time AS modifyTime,
            s.creater As creater,
            c.real_name AS tradeClerkName,
            c.phone As tradeClerkPhone,
            bi.name AS name,
            bi.name AS industryName,
            bi.parent_id AS parentId,
            s.clerk_id As clerkId,
            c.real_name As clerkName
        FROM
            shop s
                LEFT JOIN
            clerk c ON c.id = s.clerk_id
              left join
            base_industry bi ON s.industry_id = bi.id
                LEFT JOIN
            (SELECT
                shop_id, COUNT(*) AS visitCount
            FROM
                customer_browse_shop
            GROUP BY shop_id) cb ON s.id = cb.shop_id
                LEFT JOIN
            (SELECT
                shop_id, COUNT(*) AS telCount
            FROM
                customer_liaison
            GROUP BY shop_id) cl ON s.id = cl.shop_id
                LEFT JOIN
            (SELECT
                shop_id, COUNT(*) AS vCount
            FROM
                customer_visit_shop
            GROUP BY shop_id) cv ON s.id = cv.shop_id
        WHERE
            s.id = #{id}
    </select>
    <select id="shopCollectedList"  resultMap="Shop_Collected_Customer_Map">
         select    s.id as id,
              img.img_url as coverImg,
              s.address as address,
              s.addr_is_show as addrIsShow,
              case when s.rent_type = 0 then '转租' ELSE '直租' END as rentTypeName,
			  s.rent_status as rentStatus,
              s.shelf_status as shelfStatus,
              s.area as area,
              s.district_id as districtId,
              s.district_name as districtName,
              s.block_id as blockId,
              s.block_name as blockName,
              s.rent_way as rentWay,
              s.rent as rent,
              s.is_face as isFace,
            <if test="query != null and query.longitude != null and query.latitude != null">
                fun_distance(s.latitude, s.longitude, #{query.latitude}, #{query.longitude}) as distance,
            </if>
              s.transfer_fee as transferFee,
              s.modify_time as modifyTime,
              bi.name AS industryName
            from customer_collected_shop ccs
						LEFT JOIN	shop s on ccs.shop_id = s.id
            left join (select shop_id,  img_url from (select shop_id, img_url from shop_img
                    order by is_cover desc, img_index asc) t_si group by shop_id) img on s.id = img.shop_id
            left join base_industry bi ON s.industry_id = bi.id
            where s.is_delete = 0   and ccs.customer_id= #{query.customerId}
            and s.latitude is not null
            and s.longitude is not null
            and s.latitude != ''
            and s.longitude != ''
            GROUP BY s.id ORDER BY ccs.create_time DESC
    </select>
    <select id="shopBrowseList"  resultMap="Shop_Browse_Customer_Map">
         select   s.id as id,
        img.img_url as coverImg,
        cb.visitCount as visitCount,
        (ifnull(cl.telCount,0) + ifnull(cv.vCount,0)) as contactCount,
        s.address as address,
        case when s.rent_type = 0 then '转租' ELSE '直租' END as rentTypeName,
        s.rent_status as rentStatus,
        s.shelf_status as shelfStatus,
        s.area as area,
        s.district_id as districtId,
        s.district_name as districtName,
        s.block_id as blockId,
        s.block_name as blockName,
        s.rent_way as rentWay,
        s.rent as rent,
        s.is_face as isFace,
        <if test="query != null and query.longitude != null and query.latitude != null">
            fun_distance(s.latitude, s.longitude, #{query.latitude}, #{query.longitude}) as distance,
        </if>
        s.transfer_fee as transferFee,
        s.modify_time as modifyTime,
        bi.name AS industryName
        from customer_browse_shop cbs
        LEFT JOIN	shop s on cbs.shop_id = s.id
        left join (select shop_id,  img_url from (select shop_id, img_url from shop_img
        order by is_cover desc, img_index asc) t_si group by shop_id) img on s.id = img.shop_id
        left join (select shop_id, count(*) as visitCount from customer_browse_shop group by shop_id) cb on s.id = cb.shop_id
        left join (select shop_id, count(*) as telCount from customer_liaison group by shop_id) cl on s.id = cl.shop_id
        left join (select shop_id, count(*) as vCount from customer_visit_shop group by shop_id) cv on s.id = cv.shop_id
        left join base_industry bi ON s.industry_id = bi.id
        where s.is_delete = 0   and cbs.customer_id=  #{query.customerId}  GROUP BY s.id ORDER BY cbs.create_time DESC
    </select>
    <select id="queryClerkByShopId" parameterType="java.lang.Long" resultType="com.dongtong.shop.dto.ClerkDTO">
        SELECT
        c.id AS clerkId, c.real_name AS clerkName
        FROM
        shop s
        LEFT JOIN
        clerk c ON s.clerk_id = c.id
        WHERE
        s.id = #{id,jdbcType=BIGINT}
    </select>

    <select id="queryClerkAndShopInfoByShopId" parameterType="java.lang.Long" resultType="com.dongtong.shop.dto.ClerkAndShopInfoDTO">
        SELECT c.phone,c.real_name as 'realName',s.address from clerk c LEFT JOIN shop s on c.id = s.clerk_id
          where s.id = #{shopId}
    </select>

    <select id="shopVisitedList" resultMap="Shop_Visited_Customer_Map" parameterType="java.lang.Long">
         select   cvs.customer_id as customerId, s.id as id,DATE_FORMAT(cvs.create_time, '%Y-%m-%d %H:%i:%s') as applyTime,
              img.img_url as coverImg,
              s.address as address,
              case when s.rent_type = 0 then '转租' ELSE '直租' END as rentTypeName,
			  s.rent_status as rentStatus,s.shelf_status as shelfStatus,s.addr_is_show as addrIsShow,
              s.area as area,
              s.district_id as districtId,
              s.district_name as districtName,
              s.block_id as blockId,
              s.block_name as blockName,
              s.rent_way as rentWay,
              s.rent as rent,
              s.is_face as isFace,
              <if test="query != null and query.longitude != null and query.latitude != null">
                 fun_distance(s.latitude, s.longitude, #{query.latitude}, #{query.longitude}) as distance,
               </if>
              s.transfer_fee as transferFee,
              s.modify_time as modifyTime
            from customer_visit_shop cvs
						LEFT JOIN	shop s on cvs.shop_id = s.id
            left join (select shop_id,  img_url from (select shop_id, img_url from shop_img
                    order by is_cover desc, img_index asc) t_si group by shop_id) img on s.id = img.shop_id
            where s.is_delete = 0 and cvs.is_delete=0 and cvs.customer_id=#{query.customerId} and status!=2
        group by s.id ORDER BY cvs.create_time DESC
    </select>

    <select id="selectRowNoByVisited" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT t.rowNo from  (
        SELECT m1.customer_id ,(@rowNum:=@rowNum+1) as rowNo from (SELECT * FROM customer_visit_shop   where  shop_id= #{id}
        ORDER BY  create_time DESC) m1,(SELECT @rowNum :=-1) m2 ) t where t.customer_id= #{customerId} limit 1;
    </select>

    <select id="queryShopNumber" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT COUNT(*) num from base_shop_number t where t.shop_num =#{shopNum,jdbcType=VARCHAR} and t.`status`='0'
    </select>

    <select id="queryShopByShopNum" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT COUNT(*) from shop t  where t.shop_code =#{shopNum,jdbcType=VARCHAR} LIMIT 1
    </select>

    <select id="countShop" resultType="java.lang.Integer">
        SELECT COUNT(id)
        FROM shop WHERE rent_status =1 and is_delete=0
    </select>

    <select id="getShopId" resultType="java.lang.Long">
        select id from shop where shop_code=#{shopCode} LIMIT 1
    </select>

    <!--  旺铺导购，推荐旺铺查询 -->
    <resultMap id="Shop_Recomend_Mapper" type="com.dongtong.shop.dto.ShopRecomendListDTO" extends="QueryCustomerShopMap">
        <result column="shop_id" property="shopId" jdbcType="BIGINT"/>
        <result column="coverImg" property="coverImg" jdbcType="VARCHAR"/>
        <result column="addrIsShow" property="addrIsShow" jdbcType="TINYINT"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="rentTypeName" property="rentTypeName" jdbcType="VARCHAR"/>
        <result column="area" property="area" jdbcType="REAL"/>
        <result column="districtId" property="districtId" jdbcType="BIGINT"/>
        <result column="districtName" property="districtName" jdbcType="VARCHAR"/>
        <result column="blockId" property="blockId" jdbcType="BIGINT"/>
        <result column="blockName" property="blockName" jdbcType="VARCHAR"/>
        <result column="rent" property="rent" jdbcType="DECIMAL"/>
        <result column="isFace" property="isFace" jdbcType="TINYINT"/>
        <result column="distance" property="distance" jdbcType="REAL"/>
        <result column="transferFee" property="transferFee" jdbcType="DECIMAL"/>
        <result column="updateTime" property="updateTime" jdbcType="VARCHAR"/>
        <collection property="featureList" column="id" ofType="com.dongtong.shop.dto.TagDTO" javaType="ArrayList"
                    select="selectShopFeatureTags">
            <id property="id" column="id"/>
            <id property="name" column="name"/>
            <id property="color" column="color"/>
        </collection>
    </resultMap>
    <select id="selectRecomendShopById"  resultMap="Shop_Recomend_Mapper" parameterType="com.dongtong.shop.query.ShopRecomendQuery">
        select s.id as shopId,
        img.img_url as coverImg,
        case when s.rent_type = 0 then '转租' ELSE '直租' END as rentTypeName,
        s.rent_status as rentStatus,
        s.area as area,
        s.district_id as districtId,
        s.district_name as districtName,
        s.block_id as blockId,
        s.block_name as blockName,
        s.rent_type as rentType,
        s.rent as rent,
        s.is_face as isFace,
        s.addr_is_show as addrIsShow,
        s.address as address,
        <if test="longitude != null and latitude != null">
            fun_distance(s.latitude, s.longitude, #{latitude}, #{longitude}) as distance,
        </if>
        s.transfer_fee as transferFee,
        CASE WHEN DATE_ADD(s.modify_time,INTERVAL 1 MINUTE) > now()
            THEN
              '刚刚'
            ELSE
                CASE WHEN DATE_ADD(s.modify_time,INTERVAL 1 HOUR) > now()
                    THEN
                      CONCAT(TIMESTAMPDIFF(MINUTE,s.modify_time,now()),'分钟前')
                    ELSE
                      CASE WHEN DATE_ADD(s.modify_time,INTERVAL 1 DAY) > now()
                      THEN
                        CONCAT(TIMESTAMPDIFF(HOUR,s.modify_time,now()),'小时前')
                      ELSE
                        DATE_FORMAT(s.modify_time,'%Y-%m-%d')
                END
            END
        END AS updateTime
        from shop s
        left join (select shop_id,  img_url from (select shop_id, img_url from shop_img
        order by is_cover desc, img_index asc) t_si group by shop_id) img on s.id = img.shop_id
        where s.is_delete = 0  and s.id=#{shopId}  GROUP BY s.id
    </select>
    <select id="selectByHitId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from shop
        where hint_id = #{hintId,jdbcType=BIGINT}
    </select>
</mapper>